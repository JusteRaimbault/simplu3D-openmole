val inputFolder = Val[File]
val paramFile = Val[File]
val outputFolder = Val[File]

val idBPU = Val[Int]
val distReculVoirie = Val[Double]
val distReculFond = Val[Double]
val distReculLat = Val[Double]
val maximalCES = Val[Double]
val hIniRoad = Val[Double]
val slopeRoad = Val[Double]
val hauteurMax = Val[Double]
val seed = Val[Long]

val energy = Val[Double]
val coverageRatio = Val[Double]
val signature = Val[Long]


val model =
  ScalaTask("""
    |val res = simplu3dopenmoleplugin.Simplu3DTask(inputFolder, newDir(), paramFile, distReculVoirie, distReculFond, distReculLat, maximalCES, hIniRoad, slopeRoad, hauteurMax, seed)
    |val (energy, coverageRatio, signature, outputFolder) = (res._1, res._2, 0L, res._10)
    |""".stripMargin) set (
    plugins += pluginsOf[simplu3dopenmoleplugin.Simplu3DTask],
    (inputs,outputs) += (inputFolder, paramFile, idBPU, distReculVoirie, distReculFond, distReculLat, maximalCES, hIniRoad, slopeRoad, hauteurMax, seed),
    outputs += (energy, coverageRatio, signature, outputFolder),
    idBPU := 255,
    inputFolder := workDirectory / "data" / "0",
    paramFile := workDirectory / "building_parameters_project_expthese_temp.xml"
  )

val copyHook = CopyFileHook(outputFolder, workDirectory / "results/shape_${seed}_${energy}_${coverageRatio}_${signature}/")

val csvHook = CSVHook(workDirectory / "results" / "energy.csv", values = Seq(seed, energy, coverageRatio, signature))

//val env = EGIEnvironment("vo.complex-systems.eu")
val env = LocalEnvironment(5)


val rangeReculVoirie = (1.0 to 1.0 by 0.5) // (0.0 to 5.0 by 0.5)
val rangeReculFond = (1.0 to 1.0 by 0.5) // (0.0 to 5.0 by 0.5)
val rangeReculLat = (1.0 to 1.0 by 0.5) // (0.0 to 5.0 by 0.5)
val rangeMaxCES = (0.5 to 0.5 by 0.1) // (0.1 to 1.0 by 0.1)
val rangeHIniRoad = (5.0 to 5.0 by 1.0) // (0.0 to 10.0 by 0.5)
val rangeSlope = (1.5 to 1.5 by 0.5) // (0.0 to 3.0 by 0.5)
val rangeHMax = (20.0 to 20.0 by 1.0) // (10.0 to 20.0 by 1.0)

DirectSampling(
      evaluation = (model on env hook csvHook hook copyHook),
      sampling =
        (distReculVoirie in rangeReculVoirie)
      x (distReculFond in rangeReculFond)
      x (distReculLat in rangeReculLat)
      x (maximalCES in rangeMaxCES)
      x (hIniRoad in rangeHIniRoad)
      x (slopeRoad in rangeSlope)
      x (hauteurMax in rangeHMax)
      x (seed in UniformDistribution[Long](42) take 10)
)
